#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Calculator.py - Calculadora Interativa
Desenvolvido por Bruno com ajuda do Otimus (IA)
"""

def adicao(a, b):
    """Realiza adi√ß√£o de dois n√∫meros"""
    return a + b

def subtracao(a, b):
    """Realiza subtra√ß√£o de dois n√∫meros"""
    return a - b

def multiplicacao(a, b):
    """Realiza multiplica√ß√£o de dois n√∫meros"""
    return a * b

def divisao(a, b):
    """Realiza divis√£o de dois n√∫meros com tratamento de divis√£o por zero"""
    if b == 0:
        raise ValueError("Erro: Divis√£o por zero n√£o √© permitida!")
    return a / b

def obter_numero(mensagem):
    """Solicita e valida entrada num√©rica do usu√°rio"""
    while True:
        try:
            return float(input(mensagem))
        except ValueError:
            print("‚ùå Por favor, digite um n√∫mero v√°lido!")

def exibir_menu():
    """Exibe o menu de opera√ß√µes dispon√≠veis"""
    print("\n" + "="*50)
    print("üßÆ CALCULADORA OTIMUS üßÆ")
    print("="*50)
    print("Opera√ß√µes dispon√≠veis:")
    print("‚ûï Adi√ß√£o")
    print("‚ûñ Subtra√ß√£o") 
    print("‚úñÔ∏è  Multiplica√ß√£o")
    print("‚ûó Divis√£o")
    print("üö™ Sair")
    print("="*50)

def main():
    """Fun√ß√£o principal da calculadora"""
    print("üéâ Bem-vindo √† Calculadora Otimus!")
    print("Desenvolvida por Bruno com ajuda da IA! ü§ñ")
    
    # Dicion√°rio de opera√ß√µes para facilitar o c√≥digo
    operacoes = {
        'adi√ß√£o': adicao,
        'adicao': adicao,
        'soma': adicao,
        '+': adicao,
        'subtra√ß√£o': subtracao,
        'subtracao': subtracao,
        'menos': subtracao,
        '-': subtracao,
        'multiplica√ß√£o': multiplicacao,
        'multiplicacao': multiplicacao,
        'vezes': multiplicacao,
        '*': multiplicacao,
        'divis√£o': divisao,
        'divisao': divisao,
        'dividir': divisao,
        '/': divisao
    }
    
    while True:
        exibir_menu()
        
        # Solicita opera√ß√£o
        operacao = input("\nDigite a opera√ß√£o desejada: ").lower().strip()
        
        # Verifica se quer sair
        if operacao in ['sa√≠da', 'saida', 'sair', 'exit', 'quit', 'q']:
            print("\nüëã Obrigado por usar a Calculadora Otimus!")
            print("At√© a pr√≥xima, Bruno! TMJ! ‚ú®")
            break
        
        # Verifica se a opera√ß√£o √© v√°lida
        if operacao not in operacoes:
            print("‚ùå Opera√ß√£o inv√°lida! Tente novamente.")
            continue
        
        try:
            # Solicita os n√∫meros
            print(f"\nüìä Opera√ß√£o: {operacao.upper()}")
            num1 = obter_numero("Digite o primeiro n√∫mero: ")
            num2 = obter_numero("Digite o segundo n√∫mero: ")
            
            # Executa a opera√ß√£o
            resultado = operacoes[operacao](num1, num2)
            
            # Exibe o resultado
            print(f"\nüéØ Resultado: {num1} {operacao} {num2} = {resultado}")
            
        except ValueError as e:
            print(f"‚ùå {e}")
        except Exception as e:
            print(f"‚ùå Erro inesperado: {e}")
        
        # Pausa antes de continuar
        input("\nPressione Enter para continuar...")

if __name__ == "__main__":
    main()
