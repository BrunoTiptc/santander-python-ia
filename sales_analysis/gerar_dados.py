#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Gerador de Dados de Vendas Sint√©ticos
Criado por Bruno com ajuda do Otimus (IA)
"""

import pandas as pd
import numpy as np
from datetime import datetime, timedelta
import random

def gerar_dados_vendas(num_registros=200):
    """Gera dados de vendas sint√©ticos realistas"""
    
    # Produtos dispon√≠veis
    produtos = [
        'Smartphone', 'Notebook', 'Tablet', 'Fone Bluetooth', 'Mouse Gamer',
        'Teclado Mec√¢nico', 'Monitor 4K', 'SSD 1TB', 'Placa de V√≠deo', 'Processador',
        'Mem√≥ria RAM', 'Fonte 750W', 'Gabinete', 'Cooler CPU', 'Webcam HD',
        'Microfone USB', 'Caixa de Som', 'Cabo HDMI', 'Adaptador USB-C', 'Carregador'
    ]
    
    # Pre√ßos base para cada produto (em reais)
    precos_base = {
        'Smartphone': 1200.0, 'Notebook': 2500.0, 'Tablet': 800.0, 'Fone Bluetooth': 150.0,
        'Mouse Gamer': 80.0, 'Teclado Mec√¢nico': 200.0, 'Monitor 4K': 1500.0, 'SSD 1TB': 300.0,
        'Placa de V√≠deo': 2000.0, 'Processador': 800.0, 'Mem√≥ria RAM': 200.0, 'Fonte 750W': 400.0,
        'Gabinete': 300.0, 'Cooler CPU': 150.0, 'Webcam HD': 250.0, 'Microfone USB': 180.0,
        'Caixa de Som': 120.0, 'Cabo HDMI': 25.0, 'Adaptador USB-C': 35.0, 'Carregador': 50.0
    }
    
    # Gera datas aleat√≥rias nos √∫ltimos 6 meses
    data_inicio = datetime.now() - timedelta(days=180)
    data_fim = datetime.now()
    
    dados = []
    
    for i in range(num_registros):
        # Data aleat√≥ria
        data = data_inicio + timedelta(
            days=random.randint(0, (data_fim - data_inicio).days),
            hours=random.randint(9, 21),  # Hor√°rio comercial
            minutes=random.randint(0, 59)
        )
        
        # Produto aleat√≥rio
        produto = random.choice(produtos)
        
        # Quantidade (mais produtos baratos s√£o vendidos em maior quantidade)
        preco_base = precos_base[produto]
        if preco_base < 100:
            quantidade = random.choices([1, 2, 3, 4, 5], weights=[40, 30, 20, 8, 2])[0]
        elif preco_base < 500:
            quantidade = random.choices([1, 2, 3, 4], weights=[60, 25, 12, 3])[0]
        else:
            quantidade = random.choices([1, 2, 3], weights=[80, 18, 2])[0]
        
        # Pre√ßo com varia√ß√£o de ¬±15%
        variacao_preco = random.uniform(0.85, 1.15)
        preco = round(preco_base * variacao_preco, 2)
        
        dados.append({
            'data': data.strftime('%Y-%m-%d'),
            'produto': produto,
            'quantidade': quantidade,
            'preco': preco
        })
    
    return pd.DataFrame(dados)

def main():
    """Fun√ß√£o principal"""
    print("üéØ Gerando dados de vendas sint√©ticos...")
    print("Desenvolvido por Bruno com ajuda do Otimus! ü§ñ")
    
    # Gera dados
    df_vendas = gerar_dados_vendas(200)
    
    # Salva como CSV
    caminho_arquivo = 'vendas.csv'
    df_vendas.to_csv(caminho_arquivo, index=False, encoding='utf-8')
    
    print(f"‚úÖ Dados gerados com sucesso!")
    print(f"üìä Total de registros: {len(df_vendas)}")
    print(f"üìÖ Per√≠odo: {df_vendas['data'].min()} at√© {df_vendas['data'].max()}")
    print(f"üõçÔ∏è Produtos √∫nicos: {df_vendas['produto'].nunique()}")
    print(f"üí∞ Receita total: R$ {df_vendas['quantidade'].multiply(df_vendas['preco']).sum():.2f}")
    print(f"üìÅ Arquivo salvo: {caminho_arquivo}")
    
    # Mostra amostra dos dados
    print(f"\nüìã Primeiras 10 linhas:")
    print(df_vendas.head(10))
    
    # Estat√≠sticas por produto
    print(f"\nüìà Top 5 produtos por quantidade vendida:")
    top_produtos = df_vendas.groupby('produto')['quantidade'].sum().sort_values(ascending=False)
    print(top_produtos.head())
    
    print(f"\n‚ú® Dados prontos para an√°lise! TMJ! üí™")

if __name__ == "__main__":
    main()
